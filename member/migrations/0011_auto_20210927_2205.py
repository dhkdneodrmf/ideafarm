# Generated by Django 3.2.6 on 2021-09-27 13:05

import ckeditor.fields
import ckeditor_uploader.fields
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('member', '0010_remove_prod_categ_sma_big'),
    ]

    operations = [
        migrations.CreateModel(
            name='Devlivery',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Method', models.CharField(max_length=20, unique=True, verbose_name='배송방법')),
                ('Dprice', models.PositiveIntegerField(default=0, verbose_name='배송비')),
            ],
            options={
                'verbose_name': '배송방법입력',
                'verbose_name_plural': '배송방법입력',
                'db_table': 'ideafarm_Deliever',
            },
        ),
        migrations.CreateModel(
            name='Devlivery_com',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Company', models.CharField(db_index=True, max_length=10, unique=True, verbose_name='택배사')),
            ],
            options={
                'verbose_name': '택배사등록',
                'verbose_name_plural': '택배사등록',
                'db_table': 'ideafarm_Delicom',
            },
        ),
        migrations.CreateModel(
            name='Devlivery_term',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Guide', ckeditor.fields.RichTextField(max_length=10000, verbose_name='배송안내')),
                ('Refund', ckeditor.fields.RichTextField(max_length=10000, verbose_name='교환 및 반품안내')),
                ('registerday', models.DateTimeField(auto_now_add=True, verbose_name='등록일')),
            ],
            options={
                'verbose_name': '배송정책 등록',
                'verbose_name_plural': '배송정책 등록',
                'db_table': 'ideafarm_Deliterm',
            },
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Code', models.CharField(db_index=True, max_length=10, unique=True, verbose_name='상품분류코드')),
                ('Name', models.CharField(db_index=True, max_length=40, verbose_name='상품명')),
                ('Descrition', models.CharField(db_index=True, max_length=120, verbose_name='상품태그')),
                ('Detail', ckeditor_uploader.fields.RichTextUploadingField(blank=True, null=True, verbose_name='상품상세설명')),
                ('Stock', models.PositiveIntegerField(default=999999, verbose_name='재고수량')),
                ('Seller', models.CharField(db_index=True, max_length=80, verbose_name='판매자')),
                ('NormalPrice', models.PositiveIntegerField(verbose_name='정가(원)')),
                ('Discount', models.CharField(max_length=3, validators=[django.core.validators.RegexValidator('^((100)|(\\d{1,2}(\\.\\d*)?))$', '백분율 값을 입력해야합니다.')], verbose_name='할인율(%)')),
                ('Option', models.JSONField(null=True, verbose_name='상품옵션')),
                ('Pregisterday', models.DateTimeField(auto_now_add=True, verbose_name='상품등록일')),
                ('Userveiw', models.PositiveIntegerField(default=0, verbose_name='상품조회수')),
                ('Userpurchase', models.PositiveIntegerField(default=0, verbose_name='상품구매수')),
            ],
            options={
                'verbose_name': '상품',
                'verbose_name_plural': '상품',
                'db_table': 'ideafarm_Product',
            },
        ),
        migrations.CreateModel(
            name='Product_review',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Evaluate', models.CharField(db_index=True, max_length=4, validators=[django.core.validators.RegexValidator('^((5)|([0-4]{1}(\\.\\d*)?))$', '0~5점 사이를 입력하세요.')], verbose_name='평점')),
                ('Content', models.TextField(db_index=True, max_length=4000, verbose_name='상품리뷰')),
                ('Answer', models.TextField(db_index=True, max_length=4000, null=True, verbose_name='후기답변내용')),
                ('Asker', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='member.user')),
                ('Product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='member.product')),
            ],
        ),
        migrations.AlterField(
            model_name='prod_categ_big',
            name='Code',
            field=models.CharField(db_index=True, max_length=10, unique=True, verbose_name='대분류코드'),
        ),
        migrations.AlterField(
            model_name='prod_categ_big',
            name='Intro',
            field=ckeditor_uploader.fields.RichTextUploadingField(blank=True, null=True, verbose_name='대분류소개'),
        ),
        migrations.AlterField(
            model_name='prod_categ_big',
            name='Name',
            field=models.CharField(db_index=True, max_length=50, verbose_name='대분류명'),
        ),
        migrations.AlterField(
            model_name='prod_categ_mid',
            name='Big',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='member.prod_categ_big', verbose_name='대분류선택'),
        ),
        migrations.AlterField(
            model_name='prod_categ_mid',
            name='Code',
            field=models.CharField(db_index=True, max_length=10, unique=True, verbose_name='중분류코드'),
        ),
        migrations.AlterField(
            model_name='prod_categ_mid',
            name='Intro',
            field=ckeditor_uploader.fields.RichTextUploadingField(blank=True, null=True, verbose_name='중분류소개'),
        ),
        migrations.AlterField(
            model_name='prod_categ_mid',
            name='Name',
            field=models.CharField(db_index=True, max_length=50, verbose_name='중분류명'),
        ),
        migrations.AlterField(
            model_name='prod_categ_sma',
            name='Code',
            field=models.CharField(db_index=True, max_length=10, unique=True, verbose_name='소분류코드'),
        ),
        migrations.AlterField(
            model_name='prod_categ_sma',
            name='Intro',
            field=ckeditor_uploader.fields.RichTextUploadingField(blank=True, null=True, verbose_name='소분류소개'),
        ),
        migrations.AlterField(
            model_name='prod_categ_sma',
            name='Mid',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='member.prod_categ_mid', verbose_name='중분류선택'),
        ),
        migrations.AlterField(
            model_name='prod_categ_sma',
            name='Name',
            field=models.CharField(db_index=True, max_length=50, verbose_name='소분류명'),
        ),
        migrations.CreateModel(
            name='Product_thumb',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(blank=True, null=True, upload_to='productimages/', verbose_name='상품이미지')),
                ('Product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='member.product')),
            ],
        ),
        migrations.CreateModel(
            name='Product_reviewimg',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(blank=True, null=True, upload_to='productreviewimages/', verbose_name='사진첨부')),
                ('Product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='member.product_review')),
            ],
        ),
        migrations.CreateModel(
            name='Product_qna',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Question', models.TextField(db_index=True, max_length=4000, verbose_name='상품문의내용')),
                ('Answer', models.TextField(db_index=True, max_length=4000, null=True, verbose_name='상품답변내용')),
                ('Asker', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='member.user')),
                ('Product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='member.product')),
            ],
        ),
        migrations.AddField(
            model_name='product',
            name='Big',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='member.prod_categ_big', verbose_name='대분류선택'),
        ),
        migrations.AddField(
            model_name='product',
            name='Delicom',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='member.devlivery_com', verbose_name='택배사 선택'),
        ),
        migrations.AddField(
            model_name='product',
            name='Deliver',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='member.devlivery', verbose_name='배송방법 선택'),
        ),
        migrations.AddField(
            model_name='product',
            name='Deliverterm',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='member.devlivery_term', verbose_name='배송정책 선택'),
        ),
        migrations.AddField(
            model_name='product',
            name='Mid',
            field=models.ForeignKey(limit_choices_to=models.Q(models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='member.prod_categ_big', verbose_name='대분류선택')), on_delete=django.db.models.deletion.CASCADE, to='member.prod_categ_mid', verbose_name='중분류선택'),
        ),
        migrations.AddField(
            model_name='product',
            name='ProdRelation',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='member.product', verbose_name='연관상품 선택'),
        ),
        migrations.AddField(
            model_name='product',
            name='Sma',
            field=models.ForeignKey(limit_choices_to=models.Q(models.ForeignKey(limit_choices_to=models.Q(models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='member.prod_categ_big', verbose_name='대분류선택')), on_delete=django.db.models.deletion.CASCADE, to='member.prod_categ_mid', verbose_name='중분류선택')), on_delete=django.db.models.deletion.CASCADE, to='member.prod_categ_sma', verbose_name='소분류선택'),
        ),
    ]
